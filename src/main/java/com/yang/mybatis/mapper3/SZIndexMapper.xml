<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.yang.mybatis.mapper3.SZIndexMapper" >
  <resultMap id="BaseResultMap" type="com.yang.bean.SZIndex" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="code" property="code" jdbcType="VARCHAR" />
    <result column="codeName" property="codename" jdbcType="VARCHAR" />
    <result column="close_price" property="closePrice" jdbcType="DECIMAL" />
    <result column="max_price" property="maxPrice" jdbcType="DECIMAL" />
    <result column="min_price" property="minPrice" jdbcType="DECIMAL" />
    <result column="start_price" property="startPrice" jdbcType="DECIMAL" />
    <result column="start_oneday_price" property="startOnedayPrice" jdbcType="DECIMAL" />
    <result column="quota" property="quota" jdbcType="DECIMAL" />
    <result column="rate" property="rate" jdbcType="DECIMAL" />
    <result column="volume" property="volume" jdbcType="DECIMAL" />
    <result column="amount" property="amount" jdbcType="DECIMAL" />
    <result column="close_time" property="closeTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs"
             type="com.yang.mybatis.mapper3.SZIndexMapper">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <result column="f_request_json" jdbcType="LONGVARCHAR" property="requestJson"/>
    <result column="f_makeloan_response_json" jdbcType="LONGVARCHAR" property="makeloanResponseJson"/>
  </resultMap>
  <sql id="Base_Column_List" >
    id, code, codeName, close_price, max_price, min_price, start_price, start_oneday_price, 
    quota, rate, volume, amount, close_time
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from sz_index
    where id = #{id,jdbcType=INTEGER}
  </select>

  <select id="selectSZIndex" resultMap="BaseResultMap">
    select
    close_time,close_price
    from sz_index
    where 1=1
    <if test='startdate != null and startdate != ""'>
      AND close_time >= #{startdate,jdbcType=TIMESTAMP}
    </if>
    <if test='enddate != null and enddate != ""'>
    AND close_time <![CDATA[ <= ]]> #{enddate,jdbcType=TIMESTAMP}
  </if>
  </select>
  <!--执行写入数据操作-->
  <insert id="insertSZList"
          parameterType="java.util.List">
    INSERT INTO sz_index (
    code, codeName,
    close_price, max_price, min_price,
    start_price, start_oneday_price, quota,
    rate, volume, amount,
    close_time
    )VALUES
    <foreach collection="list" item="item" index="index" separator=",">
      (
      #{item.code,jdbcType=VARCHAR}, #{item.codename,jdbcType=VARCHAR},
      #{item.closePrice,jdbcType=DECIMAL}, #{item.maxPrice,jdbcType=DECIMAL}, #{item.minPrice,jdbcType=DECIMAL},
      #{item.startPrice,jdbcType=DECIMAL}, #{item.startOnedayPrice,jdbcType=DECIMAL}, #{item.quota,jdbcType=DECIMAL},
      #{item.rate,jdbcType=DECIMAL}, #{item.volume,jdbcType=DECIMAL}, #{item.amount,jdbcType=DECIMAL},
      #{item.closeTime,jdbcType=TIMESTAMP}
      )
    </foreach>
  </insert>









  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from sz_index
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.yang.bean.SZIndex" >
    insert into sz_index (id, code, codeName, 
      close_price, max_price, min_price, 
      start_price, start_oneday_price, quota, 
      rate, volume, amount, 
      close_time)
    values (#{id,jdbcType=INTEGER}, #{code,jdbcType=VARCHAR}, #{codename,jdbcType=VARCHAR}, 
      #{closePrice,jdbcType=DECIMAL}, #{maxPrice,jdbcType=DECIMAL}, #{minPrice,jdbcType=DECIMAL}, 
      #{startPrice,jdbcType=DECIMAL}, #{startOnedayPrice,jdbcType=DECIMAL}, #{quota,jdbcType=DECIMAL}, 
      #{rate,jdbcType=DECIMAL}, #{volume,jdbcType=DECIMAL}, #{amount,jdbcType=DECIMAL}, 
      #{closeTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.yang.bean.SZIndex" >
    insert into sz_index
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="code != null" >
        code,
      </if>
      <if test="codename != null" >
        codeName,
      </if>
      <if test="closePrice != null" >
        close_price,
      </if>
      <if test="maxPrice != null" >
        max_price,
      </if>
      <if test="minPrice != null" >
        min_price,
      </if>
      <if test="startPrice != null" >
        start_price,
      </if>
      <if test="startOnedayPrice != null" >
        start_oneday_price,
      </if>
      <if test="quota != null" >
        quota,
      </if>
      <if test="rate != null" >
        rate,
      </if>
      <if test="volume != null" >
        volume,
      </if>
      <if test="amount != null" >
        amount,
      </if>
      <if test="closeTime != null" >
        close_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="code != null" >
        #{code,jdbcType=VARCHAR},
      </if>
      <if test="codename != null" >
        #{codename,jdbcType=VARCHAR},
      </if>
      <if test="closePrice != null" >
        #{closePrice,jdbcType=DECIMAL},
      </if>
      <if test="maxPrice != null" >
        #{maxPrice,jdbcType=DECIMAL},
      </if>
      <if test="minPrice != null" >
        #{minPrice,jdbcType=DECIMAL},
      </if>
      <if test="startPrice != null" >
        #{startPrice,jdbcType=DECIMAL},
      </if>
      <if test="startOnedayPrice != null" >
        #{startOnedayPrice,jdbcType=DECIMAL},
      </if>
      <if test="quota != null" >
        #{quota,jdbcType=DECIMAL},
      </if>
      <if test="rate != null" >
        #{rate,jdbcType=DECIMAL},
      </if>
      <if test="volume != null" >
        #{volume,jdbcType=DECIMAL},
      </if>
      <if test="amount != null" >
        #{amount,jdbcType=DECIMAL},
      </if>
      <if test="closeTime != null" >
        #{closeTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.yang.bean.SZIndex" >
    update sz_index
    <set >
      <if test="code != null" >
        code = #{code,jdbcType=VARCHAR},
      </if>
      <if test="codename != null" >
        codeName = #{codename,jdbcType=VARCHAR},
      </if>
      <if test="closePrice != null" >
        close_price = #{closePrice,jdbcType=DECIMAL},
      </if>
      <if test="maxPrice != null" >
        max_price = #{maxPrice,jdbcType=DECIMAL},
      </if>
      <if test="minPrice != null" >
        min_price = #{minPrice,jdbcType=DECIMAL},
      </if>
      <if test="startPrice != null" >
        start_price = #{startPrice,jdbcType=DECIMAL},
      </if>
      <if test="startOnedayPrice != null" >
        start_oneday_price = #{startOnedayPrice,jdbcType=DECIMAL},
      </if>
      <if test="quota != null" >
        quota = #{quota,jdbcType=DECIMAL},
      </if>
      <if test="rate != null" >
        rate = #{rate,jdbcType=DECIMAL},
      </if>
      <if test="volume != null" >
        volume = #{volume,jdbcType=DECIMAL},
      </if>
      <if test="amount != null" >
        amount = #{amount,jdbcType=DECIMAL},
      </if>
      <if test="closeTime != null" >
        close_time = #{closeTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.yang.bean.SZIndex" >
    update sz_index
    set code = #{code,jdbcType=VARCHAR},
      codeName = #{codename,jdbcType=VARCHAR},
      close_price = #{closePrice,jdbcType=DECIMAL},
      max_price = #{maxPrice,jdbcType=DECIMAL},
      min_price = #{minPrice,jdbcType=DECIMAL},
      start_price = #{startPrice,jdbcType=DECIMAL},
      start_oneday_price = #{startOnedayPrice,jdbcType=DECIMAL},
      quota = #{quota,jdbcType=DECIMAL},
      rate = #{rate,jdbcType=DECIMAL},
      volume = #{volume,jdbcType=DECIMAL},
      amount = #{amount,jdbcType=DECIMAL},
      close_time = #{closeTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>